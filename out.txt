Failure: ['AL_AL_H', '#']
Failure: ['AL_API', '__declspec', '(', 'dllimport', ')', '#']
Failure: ['AL_APIENTRY', '__cdecl', '#']
Failure: ['AL_INVALID', '(', '-', '1', ')', '#']
Failure: ['AL_ILLEGAL_ENUM', 'AL_INVALID_ENUM', '#']
Failure: ['AL_ILLEGAL_COMMAND', 'AL_INVALID_OPERATION', '/** Supported AL version. */']
Failure: ['AL_VERSION_1_0', '#']
Failure: ['AL_VERSION_1_1', '/** 8-bit boolean */']
Failure: ['AL_SOURCE_RELATIVE', '0x202', '/**\r\n * Inner cone angle, in degrees.\r\n * Type:    ALint, ALfloat\r\n * Range:   [0 - 360]\r\n * Default: 360\r\n *\r\n * The angle covered by the inner cone, where the source will not attenuate.\r\n */']
Failure: ['AL_CONE_INNER_ANGLE', '0x1001', '/**\r\n * Outer cone angle, in degrees.\r\n * Range:   [0 - 360]\r\n * Default: 360\r\n *\r\n * The angle covered by the outer cone, where the source will be fully\r\n * attenuated.\r\n */']
Failure: ['AL_CONE_OUTER_ANGLE', '0x1002', "/**\r\n * Source pitch.\r\n * Type:    ALfloat\r\n * Range:   [0.5 - 2.0]\r\n * Default: 1.0\r\n *\r\n * A multiplier for the frequency (sample rate) of the source's buffer.\r\n */"]
Failure: ['AL_PITCH', '0x1003', '/**\r\n * Source or listener position.\r\n * Type:    ALfloat[3], ALint[3]\r\n * Default: {0, 0, 0}\r\n *\r\n * The source or listener location in three dimensional space.\r\n *\r\n * OpenAL, like OpenGL, uses a right handed coordinate system, where in a\r\n * frontal default view X (thumb) points right, Y points up (index finger), and\r\n * Z points towards the viewer/camera (middle finger).\r\n *\r\n * To switch from a left handed coordinate system, flip the sign on the Z\r\n * coordinate.\r\n */']
Failure: ['AL_POSITION', '0x1004', '/**\r\n * Source direction.\r\n * Type:    ALfloat[3], ALint[3]\r\n * Default: {0, 0, 0}\r\n *\r\n * Specifies the current direction in local space.\r\n * A zero-length vector specifies an omni-directional source (cone is ignored).\r\n */']
Failure: ['AL_DIRECTION', '0x1005', '/**\r\n * Source or listener velocity.\r\n * Type:    ALfloat[3], ALint[3]\r\n * Default: {0, 0, 0}\r\n *\r\n * Specifies the current velocity in local space.\r\n */']
Failure: ['AL_VELOCITY', '0x1006', '/**\r\n * Source looping.\r\n * Type:    ALboolean\r\n * Range:   [AL_TRUE, AL_FALSE]\r\n * Default: AL_FALSE\r\n *\r\n * Specifies whether source is looping.\r\n */']
Failure: ['AL_LOOPING', '0x1007', '/**\r\n * Source buffer.\r\n * Type:  ALuint\r\n * Range: any valid Buffer.\r\n *\r\n * Specifies the buffer to provide sound samples.\r\n */']
Failure: ['AL_BUFFER', '0x1009', '/**\r\n * Source or listener gain.\r\n * Type:  ALfloat\r\n * Range: [0.0 - ]\r\n *\r\n * A value of 1.0 means unattenuated. Each division by 2 equals an attenuation\r\n * of about -6dB. Each multiplicaton by 2 equals an amplification of about\r\n * +6dB.\r\n *\r\n * A value of 0.0 is meaningless with respect to a logarithmic scale; it is\r\n * silent.\r\n */']
Failure: ['AL_GAIN', '0x100A', '/**\r\n * Minimum source gain.\r\n * Type:  ALfloat\r\n * Range: [0.0 - 1.0]\r\n *\r\n * The minimum gain allowed for a source, after distance and cone attenation is\r\n * applied (if applicable).\r\n */']
Failure: ['AL_MIN_GAIN', '0x100D', '/**\r\n * Maximum source gain.\r\n * Type:  ALfloat\r\n * Range: [0.0 - 1.0]\r\n *\r\n * The maximum gain allowed for a source, after distance and cone attenation is\r\n * applied (if applicable).\r\n */']
Failure: ['AL_MAX_GAIN', '0x100E', '/**\r\n * Listener orientation.\r\n * Type: ALfloat[6]\r\n * Default: {0.0, 0.0, -1.0, 0.0, 1.0, 0.0}\r\n *\r\n * Effectively two three dimensional vectors. The first vector is the front (or\r\n * "at") and the second is the top (or "up").\r\n *\r\n * Both vectors are in local space.\r\n */']
Failure: ['AL_ORIENTATION', '0x100F', '/**\r\n * Source state (query only).\r\n * Type:  ALint\r\n * Range: [AL_INITIAL, AL_PLAYING, AL_PAUSED, AL_STOPPED]\r\n */']
Failure: ['AL_SOURCE_STATE', '0x1010', '/** Source state value. */']
Failure: ['AL_INITIAL', '0x1011', '#']
Failure: ['AL_PLAYING', '0x1012', '#']
Failure: ['AL_PAUSED', '0x1013', '#']
Failure: ['AL_STOPPED', '0x1014', '/**\r\n * Source Buffer Queue size (query only).\r\n * Type: ALint\r\n *\r\n * The number of buffers queued using alSourceQueueBuffers, minus the buffers\r\n * removed with alSourceUnqueueBuffers.\r\n */']
Failure: ['AL_BUFFERS_QUEUED', '0x1015', '/**\r\n * Source Buffer Queue processed count (query only).\r\n * Type: ALint\r\n *\r\n * The number of queued buffers that have been fully processed, and can be\r\n * removed with alSourceUnqueueBuffers.\r\n *\r\n * Looping sources will never fully process buffers because they will be set to\r\n * play again for when the source loops.\r\n */']
Failure: ['AL_BUFFERS_PROCESSED', '0x1016', '/**\r\n * Source reference distance.\r\n * Type:    ALfloat\r\n * Range:   [0.0 - ]\r\n * Default: 1.0\r\n *\r\n * The distance in units that no attenuation occurs.\r\n *\r\n * At 0.0, no distance attenuation ever occurs on non-linear attenuation models.\r\n */']
Failure: ['AL_REFERENCE_DISTANCE', '0x1020', '/**\r\n * Source rolloff factor.\r\n * Type:    ALfloat\r\n * Range:   [0.0 - ]\r\n * Default: 1.0\r\n *\r\n * Multiplier to exaggerate or diminish distance attenuation.\r\n *\r\n * At 0.0, no distance attenuation ever occurs.\r\n */']
Failure: ['AL_ROLLOFF_FACTOR', '0x1021', "/**\r\n * Outer cone gain.\r\n * Type:    ALfloat\r\n * Range:   [0.0 - 1.0]\r\n * Default: 0.0\r\n *\r\n * The gain attenuation applied when the listener is outside of the source's\r\n * outer cone.\r\n */"]
Failure: ['AL_CONE_OUTER_GAIN', '0x1022', '/**\r\n * Source maximum distance.\r\n * Type:    ALfloat\r\n * Range:   [0.0 - ]\r\n * Default: +inf\r\n *\r\n * The distance above which the source is not attenuated any further with a\r\n * clamped distance model, or where attenuation reaches 0.0 gain for linear\r\n * distance models with a default rolloff factor.\r\n */']
Failure: ['AL_MAX_DISTANCE', '0x1023', '/** Source buffer position, in seconds */']
Failure: ['AL_SEC_OFFSET', '0x1024', '/** Source buffer position, in sample frames */']
Failure: ['AL_SAMPLE_OFFSET', '0x1025', '/** Source buffer position, in bytes */']
Failure: ['AL_BYTE_OFFSET', '0x1026', '/**\r\n * Source type (query only).\r\n * Type:  ALint\r\n * Range: [AL_STATIC, AL_STREAMING, AL_UNDETERMINED]\r\n *\r\n * A Source is Static if a Buffer has been attached using AL_BUFFER.\r\n *\r\n * A Source is Streaming if one or more Buffers have been attached using\r\n * alSourceQueueBuffers.\r\n *\r\n * A Source is Undetermined when it has the NULL buffer attached using\r\n * AL_BUFFER.\r\n */']
Failure: ['AL_SOURCE_TYPE', '0x1027', '/** Source type value. */']
Failure: ['AL_STATIC', '0x1028', '#']
Failure: ['AL_STREAMING', '0x1029', '#']
Failure: ['AL_UNDETERMINED', '0x1030', '/** Buffer format specifier. */']
Failure: ['AL_FORMAT_MONO8', '0x1100', '#']
Failure: ['AL_FORMAT_MONO16', '0x1101', '#']
Failure: ['AL_FORMAT_STEREO8', '0x1102', '#']
Failure: ['AL_FORMAT_STEREO16', '0x1103', '/** Buffer frequency (query only). */']
Failure: ['AL_FREQUENCY', '0x2001', '/** Buffer bits per sample (query only). */']
Failure: ['AL_BITS', '0x2002', '/** Buffer channel count (query only). */']
Failure: ['AL_CHANNELS', '0x2003', '/** Buffer data size (query only). */']
Failure: ['AL_SIZE', '0x2004', '/**\r\n * Buffer state.\r\n *\r\n * Not for public use.\r\n */']
Failure: ['AL_UNUSED', '0x2010', '#']
Failure: ['AL_PENDING', '0x2011', '#']
Failure: ['AL_PROCESSED', '0x2012', '/** No error. */']
Failure: ['AL_INVALID_NAME', '0xA001', '/** Invalid enum parameter passed to AL call. */']
Failure: ['AL_INVALID_ENUM', '0xA002', '/** Invalid value parameter passed to AL call. */']
Failure: ['AL_INVALID_VALUE', '0xA003', '/** Illegal AL call. */']
Failure: ['AL_INVALID_OPERATION', '0xA004', '/** Not enough memory. */']
Failure: ['AL_OUT_OF_MEMORY', '0xA005', '/** Context string: Vendor ID. */']
Failure: ['AL_VENDOR', '0xB001', '/** Context string: Version. */']
Failure: ['AL_VERSION', '0xB002', '/** Context string: Renderer ID. */']
Failure: ['AL_RENDERER', '0xB003', '/** Context string: Space-separated extension list. */']
Failure: ['AL_EXTENSIONS', '0xB004', '/**\r\n * Doppler scale.\r\n * Type:    ALfloat\r\n * Range:   [0.0 - ]\r\n * Default: 1.0\r\n *\r\n * Scale for source and listener velocities.\r\n */']
Failure: ['AL_DOPPLER_FACTOR', '0xC000', 'AL_API']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alDopplerFactor']
Failure: ['AL_DOPPLER_VELOCITY', '0xC001', 'AL_API']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alDopplerVelocity']
Failure: ['AL_SPEED_OF_SOUND', '0xC003', 'AL_API']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alSpeedOfSound']
Failure: ['AL_DISTANCE_MODEL', '0xD000', 'AL_API']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alDistanceModel']
Failure: ['AL_INVERSE_DISTANCE', '0xD001', '#']
Failure: ['AL_INVERSE_DISTANCE_CLAMPED', '0xD002', '#']
Failure: ['AL_LINEAR_DISTANCE', '0xD003', '#']
Failure: ['AL_LINEAR_DISTANCE_CLAMPED', '0xD004', '#']
Failure: ['AL_EXPONENT_DISTANCE', '0xD005', '#']
Failure: ['AL_EXPONENT_DISTANCE_CLAMPED', '0xD006', '/** Renderer State management. */']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alEnable']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alDisable']
Failure: ['AL_API', 'ALboolean']
Failure: ['AL_APIENTRY', 'alIsEnabled']
Failure: ['AL_API', 'const']
Failure: ['AL_APIENTRY', 'alGetString']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alGetBooleanv']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alGetIntegerv']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alGetFloatv']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alGetDoublev']
Failure: ['AL_API', 'ALboolean']
Failure: ['AL_APIENTRY', 'alGetBoolean']
Failure: ['AL_API', 'ALint']
Failure: ['AL_APIENTRY', 'alGetInteger']
Failure: ['AL_API', 'ALfloat']
Failure: ['AL_APIENTRY', 'alGetFloat']
Failure: ['AL_API', 'ALdouble']
Failure: ['AL_APIENTRY', 'alGetDouble']
Failure: ['AL_API', 'ALenum']
Failure: ['AL_APIENTRY', 'alGetError']
Failure: ['AL_API', 'ALboolean']
Failure: ['AL_APIENTRY', 'alIsExtensionPresent']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alGetProcAddress']
Failure: ['AL_API', 'ALenum']
Failure: ['AL_APIENTRY', 'alGetEnumValue']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alListenerf']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alListener3f']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alListenerfv']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alListeneri']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alListener3i']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alListeneriv']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alGetListenerf']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alGetListener3f']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alGetListenerfv']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alGetListeneri']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alGetListener3i']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alGetListeneriv']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alGenSources']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alDeleteSources']
Failure: ['AL_API', 'ALboolean']
Failure: ['AL_APIENTRY', 'alIsSource']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alSourcef']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alSource3f']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alSourcefv']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alSourcei']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alSource3i']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alSourceiv']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alGetSourcef']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alGetSource3f']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alGetSourcefv']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alGetSourcei']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alGetSource3i']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alGetSourceiv']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alSourcePlayv']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alSourceStopv']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alSourceRewindv']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alSourcePausev']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alSourcePlay']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alSourceStop']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alSourceRewind']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alSourcePause']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alSourceQueueBuffers']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alSourceUnqueueBuffers']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alGenBuffers']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alDeleteBuffers']
Failure: ['AL_API', 'ALboolean']
Failure: ['AL_APIENTRY', 'alIsBuffer']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alBufferData']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alBufferf']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alBuffer3f']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alBufferfv']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alBufferi']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alBuffer3i']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alBufferiv']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alGetBufferf']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alGetBuffer3f']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alGetBufferfv']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alGetBufferi']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alGetBuffer3i']
Failure: ['AL_API', 'void']
Failure: ['AL_APIENTRY', 'alGetBufferiv']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
Failure: ['AL_APIENTRY', '*']
blist([('AL_NONE', 0), ('AL_FALSE', 0), ('AL_TRUE', 1), ('AL_NO_ERROR', 0)])
